


string newline;


void Game_1PTT()
{
   int c, x, y, a;
   int something, whatever;
   int break;
   int puzfile;


   SetupGame_Any();
   Stage_Init();



   GameTimeMode = TIME_REMAINING;
   GameTimeTimer=60;
   GameTime = 120;
   GameTimeRender=1;

   GameMusicState=MUSIC_NONE;
   GameMusicStateChange=1;

      // draw the stage with no transparency for a little bit
   Stage_Transparency=0;
   for(c=0;c<60;c++)
   {
      NEXTTICKTIME=systemtime+1;
      Sound();
      Stage_Background();
      Stage_Foreground();
      CONTROLMON
      Render_Info_1P();
      ShowPage();
      BMPCAPTURE

      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }
      // fade transparency and panels in
   for(Stage_Transparency=0;Stage_Transparency<100;Stage_Transparency+=4)
   {
      NEXTTICKTIME=systemtime+1;
      Sound();
      Stage_Background();
      FadingPanels_1P(0,Stage_Transparency);
      Stage_Foreground();
      CONTROLMON
      Render_Info_1P();
      ShowPage();
      BMPCAPTURE

      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }
      // draw the time doing its stuff
   Stage_Transparency=100;
   whatever=0;
   something=60;
   x=128; y=106;
   c=0;
   break=0;
   while(!break)
   {
      NEXTTICKTIME=systemtime+1;

      Sound();
      Stage_Background();
      FadingPanels_1P(0,100);
      Stage_Foreground();
      CONTROLMON
      Render_Info_1P();

      if(something) something--;
      else
      {
         c+=4;
         y-=4;

         x=128-TimeSlideAni[c];
         whatever=1;
      }

      if(CLOCK&2) TBlit(x,y,GameTimeDisplay,screen);
      else
      {
         if(!whatever) TBlit(154,96,Graphics_TIME,screen);
      }

      ShowPage();
      BMPCAPTURE

      if(c>=64) break=1;
      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }
      // then the word READY comes down ZZzooomm
   for(y=0-16;y<80;y+=4)
   {
      NEXTTICKTIME=systemtime+1;

      Sound();
      Stage_Background();
      FadingPanels_1P(0,100);
      Stage_Foreground();
      CONTROLMON
      Render_Info_1P();
      TGrabRegion(0,0,61,15, 137,y, Graphics_Ready321, screen);
      ShowPage();
      BMPCAPTURE

      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }
      // and then it's like:  3, 2, 1 while the cursor drops in like zoom, zoom
   something=3;
   c=60;
   x=180; y=0-27;
   break=0;
   SFX_Bell_Play=24;
   while(!break)
   {
      NEXTTICKTIME=systemtime+1;

      Sound();
      Stage_Background();
      FadingPanels_1P(0,100);
      if(y!=123) y+=5;
      else
      {
         if(x!=148) x-=4;
         else break=1;
      }
      TBlit(x, y, Graphics_Cursor[1],screen);
      Stage_Foreground();
      CONTROLMON
      Render_Info_1P();
      TGrabRegion(0,0,61,15, 137,82, Graphics_Ready321, screen);
      TGrabRegion(something<<4,16,something<<4+15,31, 161,114, Graphics_Ready321, screen);
      ShowPage();
      BMPCAPTURE

      c--;
      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }
      // at this point you can move the cursor around.
   while(something)
   {
      NEXTTICKTIME=systemtime+1;

      Controls();
      QuietCursorMovement();
      Sound();
      Stage_Background();
      FadingPanels_1P(0,100);
      Stage_Foreground();
      CONTROLMON
      if(CLOCK&2) 
         Render_Cursor();
      Render_Info_1P();
      TGrabRegion(0,0,61,15, 137,82, Graphics_Ready321, screen);
      TGrabRegion(something<<4,16,something<<4+15,31, 161,114, Graphics_Ready321, screen);
      ShowPage();
      BMPCAPTURE

      c--;
      if(!c)
      {
         SFX_Bell_Play=24;
         something--;
         c=60;
      }
      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }



      // 1PTT GAME BEGINS //////////////////////////////////////////////

   GameMusicState=MUSIC_NORMAL;
   GameMusicStateChange=1;

   break=0;
   SFX_Bell_Play=25;
   while(!break)
   {
      NEXTTICKTIME=systemtime+1;

      Controls();
      PDP();

      Sound();

      Stage_Background();
      Render_1P();
      Stage_Foreground();
      CONTROLMON
      Render_Cursor();
      Render_Info_1P();
      Render_Confetti();
      Render_Cards();
      ShowPage();
      BMPCAPTURE
      // also
      // if(key[SCAN_A]) SaveScreenShot();

      if( !GameTime || P1GameOver || key[SCAN_ESC] ) break=1;

      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }

   if(!GameTime)
   {
      SFX_Bell_Play=25;
      GameMusicState=MUSIC_NONE;
      GameMusicStateChange=1;
   }

   for(a=0;a<120;a++)
   {
      NEXTTICKTIME=systemtime+1;

      if(a==20) SFX_Bell_Play=26;
      Sound();
      Stage_Background();
      FadingPanels_1P(5,100);
      Stage_Foreground();
      CONTROLMON
      Render_Info_1P();
      ShowPage();
      BMPCAPTURE

      while(systemtime<NEXTTICKTIME) {}
      CLOCK++;
   }
   Stage_ShutDown();

   if(key[SCAN_ESC]) ShutDown("");
}










void SetupGame_Any()
{
   int a;

   P1StackPosX=120;
   P1StackPosY=31;

   switch(P1DifficultyLV)
   {
      case EASY:
         FRAMECOUNT_HOVER=12;
         FRAMECOUNT_MATCH=61;
         FRAMECOUNT_FLASH=16;
         FRAMECOUNT_POP=9;
      case NORMAL:
         FRAMECOUNT_HOVER=9;
         FRAMECOUNT_MATCH=50;
         FRAMECOUNT_FLASH=13;
         FRAMECOUNT_POP=8;
      case HARD:
         FRAMECOUNT_HOVER=6;
         FRAMECOUNT_MATCH=37;
         FRAMECOUNT_FLASH=8;
         FRAMECOUNT_POP=7;
   }

   P1GameOver=0;
   PanelsInTopRow=0;
   P1HasRisen=0;
   Count_ActivePanels=0;
   Count_ChainPanels=0;
   P1ChainCounter=0;

   ComboCardsQueueLength=0;
   ChainCards16QueueLength=0;
   ChainCards21QueueLength=0;
   NumConfettis=0;

   P1Score=0;
   P1ScoreRender=1;

   P1StopTime=0;
   P1StopTimeTimer=0;
   P1SpeedLVRender=1;

   P1DangerTimer=0;
   P1RiseTimer=FRAMECOUNT_RISE;

   for(a=0;a<96;a++)
   {
      P1StackPanels[a]=0;
      P1StackFlags[a]=0;
      P1StackTimers[a]=0;
      P1StackTags[a]=0;
   }

   P1StackDisplacement=0;

   P1CurRow=6;
   P1CurCol=2;
   Controls_NewGame();

}
