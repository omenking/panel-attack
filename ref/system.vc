
#define BMPCAPTURE //SaveScreenShot();
#define CONTROLMON Render_Controller();



#define TMOL  42


#include "source\sound.vc";
#include "source\engine.vc";
#include "source\input.vc";
#include "source\graphics.vc";
#include "source\game.vc";
#include "source\stage.vc";
#include "source\title.vc";

int CLOCK;
int NEXTTICKTIME;




void AutoExec()
{
   Init();

   while(1)
   {
      P1Stage=STAGE_LAKITU;  //release:  STAGE_YOSHI or STAGE_LAKITU
      Game_1PTT();
   }
   ShutDown("");
}









void Init()
{

 P1StackPosX=120;
 P1StackPosY=31;

 ScoreMode = SCOREMODE_TA;

   Score_Combo_PdP64[4] =    30;
   Score_Combo_PdP64[5] =    50;
   Score_Combo_PdP64[6] =   150;
   Score_Combo_PdP64[7] =   190;
   Score_Combo_PdP64[8] =   230;
   Score_Combo_PdP64[9] =   270;
   Score_Combo_PdP64[10]=   310;
   Score_Combo_PdP64[11]=   400;
   Score_Combo_PdP64[12]=   450;
   Score_Combo_PdP64[13]=   500;
   Score_Combo_PdP64[14]=   550;
   Score_Combo_PdP64[15]=   700;
   Score_Combo_PdP64[16]=   760;
   Score_Combo_PdP64[17]=   850;
   Score_Combo_PdP64[18]=   970;
   Score_Combo_PdP64[19]=  1120;
   Score_Combo_PdP64[20]=  1300;
   Score_Combo_PdP64[21]=  1510;
   Score_Combo_PdP64[22]=  1750;
   Score_Combo_PdP64[23]=  2020;
   Score_Combo_PdP64[24]=  2320;
   Score_Combo_PdP64[25]=  2650;
   Score_Combo_PdP64[26]=  3010;
   Score_Combo_PdP64[27]=  3400;
   Score_Combo_PdP64[28]=  3820;
   Score_Combo_PdP64[29]=  4270;
   Score_Combo_PdP64[30]=  4750;
   Score_Combo_PdP64[31]=  5260;
   Score_Combo_PdP64[32]= 15000;
   Score_Combo_PdP64[33]= 15570;
   Score_Combo_PdP64[34]= 16170;
   Score_Combo_PdP64[35]= 16800;
   Score_Combo_PdP64[36]= 17460;
   Score_Combo_PdP64[37]= 18150;
   Score_Combo_PdP64[38]= 18870;
   Score_Combo_PdP64[39]= 19620;

   Score_Combo_TA[4]=      20;
   Score_Combo_TA[5]=      30;
   Score_Combo_TA[6]=      50;
   Score_Combo_TA[7]=      60;
   Score_Combo_TA[8]=      70;
   Score_Combo_TA[9]=      80;
   Score_Combo_TA[10]=    100;
   Score_Combo_TA[11]=    140;
   Score_Combo_TA[12]=    170;
   Score_Combo_TA[13]=    210;
   Score_Combo_TA[14]=    250;
   Score_Combo_TA[15]=    290;
   Score_Combo_TA[16]=    340;
   Score_Combo_TA[17]=    390;
   Score_Combo_TA[18]=    440;
   Score_Combo_TA[19]=    490;
   Score_Combo_TA[20]=    550;
   Score_Combo_TA[21]=    610;
   Score_Combo_TA[22]=    680;
   Score_Combo_TA[23]=    750;
   Score_Combo_TA[24]=    820;
   Score_Combo_TA[25]=    900;
   Score_Combo_TA[26]=    980;
   Score_Combo_TA[27]=   1060;
   Score_Combo_TA[28]=   1150;
   Score_Combo_TA[29]=   1240;
   Score_Combo_TA[30]=   1330;


   Score_Chain_TA[2]=      50;
   Score_Chain_TA[3]=      80;
   Score_Chain_TA[4]=     150;
   Score_Chain_TA[5]=     300;
   Score_Chain_TA[6]=     400;
   Score_Chain_TA[7]=     500;
   Score_Chain_TA[8]=     700;
   Score_Chain_TA[9]=     900;
   Score_Chain_TA[10]=   1100;
   Score_Chain_TA[11]=   1300;
   Score_Chain_TA[12]=   1500;
   Score_Chain_TA[13]=   1800;


   StopTime_Combo[0][VEASY]=3;
   StopTime_Chain[0][VEASY]=7;
   StopTime_Combo[1][VEASY]=13;
   StopTime_Chain[1][VEASY]=13;

   StopTime_Combo[0][EASY]=2;
   StopTime_Chain[0][EASY]=5;
   StopTime_Combo[1][EASY]=10;
   StopTime_Chain[1][EASY]=10;

   StopTime_Combo[0][NORMAL]=2;
   StopTime_Chain[0][NORMAL]=3;
   StopTime_Combo[1][NORMAL]=7;
   StopTime_Chain[1][NORMAL]=7;

   StopTime_Combo[0][HARD]=2;
   StopTime_Chain[0][HARD]=2;
   StopTime_Combo[1][HARD]=4;
   StopTime_Chain[1][HARD]=4;

   StopTime_Combo[0][VHARD]=1;
   StopTime_Chain[0][VHARD]=1;
   StopTime_Combo[1][VHARD]=1;
   StopTime_Chain[1][VHARD]=1;


 P1DifficultyLV=EASY;


 P1SpeedLV=1;
 FRAMECOUNT_RISE=60;
 P1CurWaitTime=25;
 

   Controls_SetDefaults();
   Graphics_Init();
   Sound_Init();

}

void ShutDown(string msg)
{
   Graphics_ShutDown();
   Sound_ShutDown();
   Exit(msg);
}







int ScreenShot_Number;
void SaveScreenShot()
{
   string ScreenShot_Filename;
   int file;
   int row, col;
   int something;

   ScreenShot_Filename="screens\"+str(ScreenShot_Number)+".bmp";
   file=FileOpen(ScreenShot_Filename,FILE_WRITE);

   FileWrite(file,"BM");
   FileWriteQuad(file,0);   // file size (ignore)
   FileWriteQuad(file,0);   // two reserved words
   FileWriteQuad(file,54);  // offset to image data

   FileWriteQuad(file,40);   // size of the bitmap info structure
   FileWriteQuad(file,320); // image width
   FileWriteQuad(file,240); // image height
   FileWriteWord(file,1);   // Number of planes?  *shrug*
   FileWriteWord(file,24);  // bits per pixel
   FileWriteQuad(file,0);   // no compression
   FileWriteQuad(file,0);   // size of bitmap data (ignore)
   FileWriteQuad(file,0);   // whatever, man
   FileWriteQuad(file,0);   // whatever, man...
   FileWriteQuad(file,0);   // number of colors (ignore)
   FileWriteQuad(file,0);   // important colors (ignore)

   for(row=239;row>=0;row--)
   {
      for(col=0;col<320;col++)
      {
         something=GetPixel(col,row,screen);
         FileWriteByte(file,GetB(something));
         FileWriteByte(file,GetG(something));
         FileWriteByte(file,GetR(something));
      }

   }

   FileClose(file);
   ScreenShot_Number++;
}